{"ast":null,"code":"var _jsxFileName = \"/home/mattia/Scrivania/detection-app/src/components/RealDetection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Webcam from \"react-webcam\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport { useRef, useState, useCallback } from \"react\";\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport camera from \"../photo-camera.svg\";\nimport download from 'downloadjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RealDetection() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [stateWebcam, setStateWebcam] = useState(false);\n  const [nameButton, setNameButton] = useState('Start');\n\n  function downloadImage() {\n    var node = document.getElementById(\"imageContainer\");\n    htmlToImage.toPng(node).then(function (dataUrl) {\n      download(dataUrl, 'my-image.png');\n    });\n  }\n\n  function drawRect(detections, ctx) {\n    // Loop through each prediction\n    detections.forEach(prediction => {\n      // Extract boxes and classes\n      const [x, y, width, height] = prediction['bbox'];\n      const text = prediction['class'] + \" \" + prediction['score']; // Set styling\n\n      const color = Math.floor(Math.random() * 16777215).toString(16);\n      ctx.strokeStyle = '#' + color;\n      ctx.font = '18px Arial'; // Draw rectangles and text\n\n      ctx.beginPath();\n      ctx.fillStyle = '#' + color;\n      ctx.fillText(text, x, y);\n      ctx.rect(x, y, width, height);\n      ctx.stroke();\n    });\n  }\n\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const obj = await net.detect(video); // Draw mesh\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx);\n    }\n  };\n\n  function change_state_webcam() {\n    if (stateWebcam === false) {\n      setStateWebcam(true);\n      setNameButton(\"Stop\");\n      runCoco();\n    } else {\n      setStateWebcam(false);\n      setNameButton(\"Start\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Componente1 d-flex flex-column align-items-center mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"yellow\",\n      children: \"REAL DETECTION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"\",\n      children: \"USE YOUR CAMERA TO REVEAL OBJECTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-primary mt-4 mb-3\",\n      style: {\n        width: 150\n      },\n      onClick: change_state_webcam,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: nameButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 112\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), stateWebcam && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"imageContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webcamRef,\n          muted: true,\n          style: {\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            width: 640,\n            height: 480\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            width: 640,\n            height: 480\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: camera,\n          onClick: downloadImage,\n          style: {\n            width: 35,\n            height: 35\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RealDetection, \"782a2VKc9GwMUViUn9s4hiuObnw=\");\n\n_c = RealDetection;\nexport default RealDetection;\n\nvar _c;\n\n$RefreshReg$(_c, \"RealDetection\");","map":{"version":3,"sources":["/home/mattia/Scrivania/detection-app/src/components/RealDetection.js"],"names":["React","Webcam","cocossd","useRef","useState","useCallback","htmlToImage","toPng","toJpeg","toBlob","toPixelData","toSvg","download","RealDetection","webcamRef","canvasRef","stateWebcam","setStateWebcam","nameButton","setNameButton","downloadImage","node","document","getElementById","then","dataUrl","drawRect","detections","ctx","forEach","prediction","x","y","width","height","text","color","Math","floor","random","toString","strokeStyle","font","beginPath","fillStyle","fillText","rect","stroke","runCoco","net","load","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","getContext","change_state_webcam","marginLeft","marginRight","left","right","textAlign","position","camera"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,WAAhC,EAA6CC,KAA7C,QAA0D,eAA1D;;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,aAAT,GAAwB;AAAA;;AAEtB,QAAMC,SAAS,GAAGX,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMY,SAAS,GAAGZ,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,OAAD,CAA5C;;AAEA,WAASgB,aAAT,GAAwB;AACtB,QAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAX;AAEAjB,IAAAA,WAAW,CAACC,KAAZ,CAAkBc,IAAlB,EACGG,IADH,CACQ,UAAUC,OAAV,EAAmB;AACzBb,MAAAA,QAAQ,CAACa,OAAD,EAAU,cAAV,CAAR;AACD,KAHD;AAID;;AAED,WAASC,QAAT,CAAmBC,UAAnB,EAA+BC,GAA/B,EAAmC;AACjC;AACAD,IAAAA,UAAU,CAACE,OAAX,CAAmBC,UAAU,IAAI;AAE/B;AACA,YAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,KAAP,EAAcC,MAAd,IAAwBJ,UAAU,CAAC,MAAD,CAAxC;AACA,YAAMK,IAAI,GAAGL,UAAU,CAAC,OAAD,CAAV,GAAsB,GAAtB,GAA4BA,UAAU,CAAC,OAAD,CAAnD,CAJ+B,CAM/B;;AACA,YAAMM,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C,CAAd;AACAZ,MAAAA,GAAG,CAACa,WAAJ,GAAkB,MAAML,KAAxB;AACAR,MAAAA,GAAG,CAACc,IAAJ,GAAW,YAAX,CAT+B,CAW/B;;AACAd,MAAAA,GAAG,CAACe,SAAJ;AACAf,MAAAA,GAAG,CAACgB,SAAJ,GAAgB,MAAMR,KAAtB;AACAR,MAAAA,GAAG,CAACiB,QAAJ,CAAaV,IAAb,EAAmBJ,CAAnB,EAAsBC,CAAtB;AACAJ,MAAAA,GAAG,CAACkB,IAAJ,CAASf,CAAT,EAAYC,CAAZ,EAAeC,KAAf,EAAsBC,MAAtB;AACAN,MAAAA,GAAG,CAACmB,MAAJ;AACD,KAjBD;AAkBD;;AAED,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,GAAG,GAAG,MAAM/C,OAAO,CAACgD,IAAR,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAF0B,CAG1B;;AACAC,IAAAA,WAAW,CAAC,MAAM;AAChBC,MAAAA,MAAM,CAACL,GAAD,CAAN;AACD,KAFU,EAER,EAFQ,CAAX;AAGD,GAPD;;AASA,QAAMK,MAAM,GAAG,MAAOL,GAAP,IAAe;AAC5B;AACA,QACE,OAAOnC,SAAS,CAACyC,OAAjB,KAA6B,WAA7B,IACAzC,SAAS,CAACyC,OAAV,KAAsB,IADtB,IAEAzC,SAAS,CAACyC,OAAV,CAAkBC,KAAlB,CAAwBC,UAAxB,KAAuC,CAHzC,EAIE;AACA;AACA,YAAMD,KAAK,GAAG1C,SAAS,CAACyC,OAAV,CAAkBC,KAAhC;AAGA,YAAME,UAAU,GAAG5C,SAAS,CAACyC,OAAV,CAAkBC,KAAlB,CAAwBE,UAA3C;AACA,YAAMC,WAAW,GAAG7C,SAAS,CAACyC,OAAV,CAAkBC,KAAlB,CAAwBG,WAA5C,CANA,CAQA;;AACA7C,MAAAA,SAAS,CAACyC,OAAV,CAAkBC,KAAlB,CAAwBvB,KAAxB,GAAgCyB,UAAhC;AACA5C,MAAAA,SAAS,CAACyC,OAAV,CAAkBC,KAAlB,CAAwBtB,MAAxB,GAAiCyB,WAAjC,CAVA,CAYA;;AACA5C,MAAAA,SAAS,CAACwC,OAAV,CAAkBtB,KAAlB,GAA0ByB,UAA1B;AACA3C,MAAAA,SAAS,CAACwC,OAAV,CAAkBrB,MAAlB,GAA2ByB,WAA3B,CAdA,CAgBA;;AACA,YAAMC,GAAG,GAAG,MAAMX,GAAG,CAACK,MAAJ,CAAWE,KAAX,CAAlB,CAjBA,CAoBA;;AACA,YAAM5B,GAAG,GAAGb,SAAS,CAACwC,OAAV,CAAkBM,UAAlB,CAA6B,IAA7B,CAAZ;AACAnC,MAAAA,QAAQ,CAACkC,GAAD,EAAMhC,GAAN,CAAR;AACD;AACF,GA9BD;;AAgCA,WAASkC,mBAAT,GAA8B;AAC5B,QAAG9C,WAAW,KAAK,KAAnB,EAAyB;AACvBC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,MAAAA,aAAa,CAAC,MAAD,CAAb;AACA6B,MAAAA,OAAO;AACR,KAJD,MAKI;AACF/B,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,MAAAA,aAAa,CAAC,OAAD,CAAb;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,wDAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,mCAAlB;AAAsD,MAAA,KAAK,EAAE;AAACc,QAAAA,KAAK,EAAC;AAAP,OAA7D;AAA2E,MAAA,OAAO,EAAE6B,mBAApF;AAAA,6BAAyG;AAAA,kBAAS5C;AAAT;AAAA;AAAA;AAAA;AAAA;AAAzG;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGF,WAAW,iBACV;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,GAAG,EAAEF,SADP;AAEE,UAAA,KAAK,EAAE,IAFT;AAGE,UAAA,KAAK,EAAE;AACLiD,YAAAA,UAAU,EAAE,MADP;AAELC,YAAAA,WAAW,EAAE,MAFR;AAGLC,YAAAA,IAAI,EAAE,CAHD;AAILC,YAAAA,KAAK,EAAE,CAJF;AAKLC,YAAAA,SAAS,EAAE,QALN;AAMLlC,YAAAA,KAAK,EAAE,GANF;AAOLC,YAAAA,MAAM,EAAE;AAPH;AAHT;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AACE,UAAA,GAAG,EAAEnB,SADP;AAEE,UAAA,KAAK,EAAE;AACLqD,YAAAA,QAAQ,EAAE,UADL;AAELL,YAAAA,UAAU,EAAE,MAFP;AAGLC,YAAAA,WAAW,EAAE,MAHR;AAILC,YAAAA,IAAI,EAAE,CAJD;AAKLC,YAAAA,KAAK,EAAE,CALF;AAMLC,YAAAA,SAAS,EAAE,QANN;AAOLlC,YAAAA,KAAK,EAAE,GAPF;AAQLC,YAAAA,MAAM,EAAE;AARH;AAFT;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA6BE;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAA,+BAAyB;AAAK,UAAA,GAAG,EAAEmC,MAAV;AAAkB,UAAA,OAAO,EAAEjD,aAA3B;AAA0C,UAAA,KAAK,EAAE;AAACa,YAAAA,KAAK,EAAE,EAAR;AAAYC,YAAAA,MAAM,EAAE;AAApB;AAAjD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAtIQrB,a;;KAAAA,a;AAwIT,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport Webcam from \"react-webcam\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport { useRef, useState, useCallback } from \"react\";\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport camera from \"../photo-camera.svg\";\nimport download from 'downloadjs'\n\nfunction RealDetection(){\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [stateWebcam, setStateWebcam] = useState(false);\n  const [nameButton, setNameButton] = useState('Start');\n\n  function downloadImage(){\n    var node = document.getElementById(\"imageContainer\");\n\n    htmlToImage.toPng(node)\n      .then(function (dataUrl) {\n      download(dataUrl, 'my-image.png');\n    });\n  }\n\n  function drawRect (detections, ctx){\n    // Loop through each prediction\n    detections.forEach(prediction => {\n\n      // Extract boxes and classes\n      const [x, y, width, height] = prediction['bbox'];\n      const text = prediction['class'] + \" \" + prediction['score'];\n\n      // Set styling\n      const color = Math.floor(Math.random()*16777215).toString(16);\n      ctx.strokeStyle = '#' + color\n      ctx.font = '18px Arial';\n\n      // Draw rectangles and text\n      ctx.beginPath();\n      ctx.fillStyle = '#' + color\n      ctx.fillText(text, x, y);\n      ctx.rect(x, y, width, height);\n      ctx.stroke();\n    });\n  }\n\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Handpose model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n\n\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const obj = await net.detect(video);\n\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx);\n    }\n  };\n\n  function change_state_webcam(){\n    if(stateWebcam === false){\n      setStateWebcam(true);\n      setNameButton(\"Stop\");\n      runCoco();\n    }\n    else{\n      setStateWebcam(false);\n      setNameButton(\"Start\");\n    }\n  }\n\n  return(\n    <div className=\"Componente1 d-flex flex-column align-items-center mt-5\">\n      <h1 className=\"yellow\">REAL DETECTION</h1>\n      <h6 className=\"\">USE YOUR CAMERA TO REVEAL OBJECTS</h6>\n      <button className=\"btn btn-outline-primary mt-4 mb-3\" style={{width:150,}} onClick={change_state_webcam}><strong>{nameButton}</strong></button>\n      {stateWebcam && (\n        <div className=\"d-flex flex-column align-items-center\">\n          <div id=\"imageContainer\">\n            <Webcam\n              ref={webcamRef}\n              muted={true}\n              style={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                left: 0,\n                right: 0,\n                textAlign: \"center\",\n                width: 640,\n                height: 480,\n              }}\n            />\n            <canvas\n              ref={canvasRef}\n              style={{\n                position: \"absolute\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                left: 0,\n                right: 0,\n                textAlign: \"center\",\n                width: 640,\n                height: 480,\n              }}\n            />\n          </div>\n          <button className=\"mt-3\"><img src={camera} onClick={downloadImage} style={{width: 35, height: 35}} /></button>\n\n\n        </div>\n      )}\n\n    </div>\n  );\n}\n\nexport default RealDetection;\n"]},"metadata":{},"sourceType":"module"}