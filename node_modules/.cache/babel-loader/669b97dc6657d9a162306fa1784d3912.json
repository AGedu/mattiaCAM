{"ast":null,"code":"var _jsxFileName = \"/home/mattia/Scrivania/detection-app1/src/components/RealDetection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Webcam from \"react-webcam\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport { useRef, useState, useCallback } from \"react\";\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport camera from \"../photo-camera.svg\";\nimport download_image from \"../download.svg\";\nimport download from 'downloadjs';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RealDetection() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const canvasRef2 = useRef(null);\n  const imageRef = useRef(null);\n  const [reloadState, setReload] = useState(0);\n  const [stateWebcam, setStateWebcam] = useState(false);\n  const [nameButton, setNameButton] = useState('Start');\n  const [imgSrc, setImgSrc] = React.useState(null);\n\n  function reload() {\n    if (reloadState === 0) {\n      setReload(1);\n      console.log(\"reload\");\n    } else {\n      setReload(0);\n      console.log(\"reload\");\n    }\n  }\n\n  function downloadImage() {\n    domtoimage.toBlob(document.getElementsByClassName(\"imageDownload\")[0]).then(function (blob) {\n      window.saveAs(blob, 'my-image.png');\n    });\n  }\n\n  const detect_img = async () => {\n    const net = await cocossd.load();\n    const img = imageRef.current;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n    canvasRef2.current.width = videoWidth;\n    canvasRef2.current.height = videoHeight;\n    const obj = await net.detect(img);\n    console.log(obj);\n    const ctx = canvasRef2.current.getContext(\"2d\");\n    drawRect(obj, ctx);\n  };\n\n  function capture() {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n    detect_img();\n  }\n\n  function drawRect(detections, ctx) {\n    // Loop through each prediction\n    detections.forEach(prediction => {\n      // Extract boxes and classes\n      const [x, y, width, height] = prediction['bbox'];\n      const text = prediction['class'] + \" \" + prediction['score']; // Set styling\n\n      const color = Math.floor(Math.random() * 16777215).toString(16);\n      ctx.strokeStyle = '#' + color;\n      ctx.font = '18px Arial'; // Draw rectangles and text\n\n      ctx.beginPath();\n      ctx.fillStyle = '#' + color;\n      ctx.fillText(text, x, y);\n      ctx.rect(x, y, width, height);\n      ctx.stroke();\n    });\n  }\n\n  const runCoco = async () => {\n    const net = await cocossd.load(); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const obj = await net.detect(video); // Draw mesh\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx);\n    }\n  };\n\n  function change_state_webcam() {\n    if (stateWebcam === false) {\n      setStateWebcam(true);\n      setNameButton(\"Stop\");\n      runCoco();\n    } else {\n      setStateWebcam(false);\n      setImgSrc(null);\n      setNameButton(\"Start\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Componente1 d-flex flex-column align-items-center mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"yellow\",\n      children: \"REAL DETECTION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"\",\n      children: \"USE YOUR CAMERA TO REVEAL OBJECTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-primary mt-4 mb-3\",\n      style: {\n        width: 150\n      },\n      onClick: change_state_webcam,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: nameButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 112\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), stateWebcam && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageContainer\",\n        children: /*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webcamRef,\n          muted: true,\n          screenshotFormat: \"image/jpeg\",\n          style: {\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            width: 640,\n            height: 480\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: camera,\n            onClick: capture,\n            style: {\n              width: 35,\n              height: 35\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: download_image,\n            onClick: downloadImage,\n            style: {\n              width: 35,\n              height: 35\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageDownload\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          ref: imageRef,\n          src: imgSrc,\n          style: {\n            width: 640,\n            height: 480\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef2,\n          style: {\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            width: 640,\n            height: 480\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RealDetection, \"wDtY5/TncbxTCOT8IEAF01JOFbM=\");\n\n_c = RealDetection;\nexport default RealDetection;\n\nvar _c;\n\n$RefreshReg$(_c, \"RealDetection\");","map":{"version":3,"sources":["/home/mattia/Scrivania/detection-app1/src/components/RealDetection.js"],"names":["React","Webcam","cocossd","useRef","useState","useCallback","htmlToImage","toPng","toJpeg","toBlob","toPixelData","toSvg","download","domtoimage","saveAs","RealDetection","webcamRef","canvasRef","canvasRef2","imageRef","reloadState","setReload","stateWebcam","setStateWebcam","nameButton","setNameButton","imgSrc","setImgSrc","reload","console","log","downloadImage","document","getElementsByClassName","then","blob","window","detect_img","net","load","img","current","videoWidth","video","videoHeight","width","height","obj","detect","ctx","getContext","drawRect","capture","imageSrc","getScreenshot","detections","forEach","prediction","x","y","text","color","Math","floor","random","toString","strokeStyle","font","beginPath","fillStyle","fillText","rect","stroke","runCoco","setInterval","readyState","change_state_webcam","marginLeft","marginRight","left","right","textAlign","position","camera","download_image"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,WAAhC,EAA6CC,KAA7C,QAA0D,eAA1D;;;AAGA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,YAAvB;;;AAEA,SAASC,aAAT,GAAwB;AAAA;;AAEtB,QAAMC,SAAS,GAAGb,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMc,SAAS,GAAGd,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMe,UAAU,GAAGf,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMgB,QAAQ,GAAGhB,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM,CAACiB,WAAD,EAAcC,SAAd,IAA2BjB,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,OAAD,CAA5C;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsB3B,KAAK,CAACI,QAAN,CAAe,IAAf,CAA5B;;AAGA,WAASwB,MAAT,GAAiB;AACf,QAAGR,WAAW,KAAG,CAAjB,EAAmB;AACjBC,MAAAA,SAAS,CAAC,CAAD,CAAT;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,KAHD,MAII;AACFT,MAAAA,SAAS,CAAC,CAAD,CAAT;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF;;AAED,WAASC,aAAT,GAAwB;AACtBlB,IAAAA,UAAU,CAACJ,MAAX,CAAkBuB,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,EAAiD,CAAjD,CAAlB,EACCC,IADD,CACM,UAAUC,IAAV,EAAgB;AAClBC,MAAAA,MAAM,CAACtB,MAAP,CAAcqB,IAAd,EAAoB,cAApB;AACH,KAHD;AAID;;AAED,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMpC,OAAO,CAACqC,IAAR,EAAlB;AACA,UAAMC,GAAG,GAAGrB,QAAQ,CAACsB,OAArB;AAEA,UAAMC,UAAU,GAAG1B,SAAS,CAACyB,OAAV,CAAkBE,KAAlB,CAAwBD,UAA3C;AACA,UAAME,WAAW,GAAG5B,SAAS,CAACyB,OAAV,CAAkBE,KAAlB,CAAwBC,WAA5C;AACA1B,IAAAA,UAAU,CAACuB,OAAX,CAAmBI,KAAnB,GAA2BH,UAA3B;AACAxB,IAAAA,UAAU,CAACuB,OAAX,CAAmBK,MAAnB,GAA4BF,WAA5B;AAEA,UAAMG,GAAG,GAAG,MAAMT,GAAG,CAACU,MAAJ,CAAWR,GAAX,CAAlB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACA,UAAME,GAAG,GAAG/B,UAAU,CAACuB,OAAX,CAAmBS,UAAnB,CAA8B,IAA9B,CAAZ;AACAC,IAAAA,QAAQ,CAACJ,GAAD,EAAKE,GAAL,CAAR;AACD,GAbD;;AAgBA,WAASG,OAAT,GAAkB;AAChB,UAAMC,QAAQ,GAAGrC,SAAS,CAACyB,OAAV,CAAkBa,aAAlB,EAAjB;AACA3B,IAAAA,SAAS,CAAC0B,QAAD,CAAT;AACAhB,IAAAA,UAAU;AACX;;AAED,WAASc,QAAT,CAAmBI,UAAnB,EAA+BN,GAA/B,EAAmC;AACjC;AACAM,IAAAA,UAAU,CAACC,OAAX,CAAmBC,UAAU,IAAI;AAE/B;AACA,YAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOd,KAAP,EAAcC,MAAd,IAAwBW,UAAU,CAAC,MAAD,CAAxC;AACA,YAAMG,IAAI,GAAGH,UAAU,CAAC,OAAD,CAAV,GAAsB,GAAtB,GAA4BA,UAAU,CAAC,OAAD,CAAnD,CAJ+B,CAM/B;;AACA,YAAMI,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C,CAAd;AACAhB,MAAAA,GAAG,CAACiB,WAAJ,GAAkB,MAAML,KAAxB;AACAZ,MAAAA,GAAG,CAACkB,IAAJ,GAAW,YAAX,CAT+B,CAW/B;;AACAlB,MAAAA,GAAG,CAACmB,SAAJ;AACAnB,MAAAA,GAAG,CAACoB,SAAJ,GAAgB,MAAMR,KAAtB;AACAZ,MAAAA,GAAG,CAACqB,QAAJ,CAAaV,IAAb,EAAmBF,CAAnB,EAAsBC,CAAtB;AACAV,MAAAA,GAAG,CAACsB,IAAJ,CAASb,CAAT,EAAYC,CAAZ,EAAed,KAAf,EAAsBC,MAAtB;AACAG,MAAAA,GAAG,CAACuB,MAAJ;AACD,KAjBD;AAkBD;;AAED,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMnC,GAAG,GAAG,MAAMpC,OAAO,CAACqC,IAAR,EAAlB,CAD0B,CAE1B;;AACAmC,IAAAA,WAAW,CAAC,MAAM;AAChB1B,MAAAA,MAAM,CAACV,GAAD,CAAN;AACD,KAFU,EAER,EAFQ,CAAX;AAGD,GAND;;AAQA,QAAMU,MAAM,GAAG,MAAOV,GAAP,IAAe;AAC5B;AACA,QACE,OAAOtB,SAAS,CAACyB,OAAjB,KAA6B,WAA7B,IACAzB,SAAS,CAACyB,OAAV,KAAsB,IADtB,IAEAzB,SAAS,CAACyB,OAAV,CAAkBE,KAAlB,CAAwBgC,UAAxB,KAAuC,CAHzC,EAIE;AACA;AACA,YAAMhC,KAAK,GAAG3B,SAAS,CAACyB,OAAV,CAAkBE,KAAhC;AAEA,YAAMD,UAAU,GAAG1B,SAAS,CAACyB,OAAV,CAAkBE,KAAlB,CAAwBD,UAA3C;AACA,YAAME,WAAW,GAAG5B,SAAS,CAACyB,OAAV,CAAkBE,KAAlB,CAAwBC,WAA5C,CALA,CAOA;;AACA5B,MAAAA,SAAS,CAACyB,OAAV,CAAkBE,KAAlB,CAAwBE,KAAxB,GAAgCH,UAAhC;AACA1B,MAAAA,SAAS,CAACyB,OAAV,CAAkBE,KAAlB,CAAwBG,MAAxB,GAAiCF,WAAjC,CATA,CAWA;;AACA3B,MAAAA,SAAS,CAACwB,OAAV,CAAkBI,KAAlB,GAA0BH,UAA1B;AACAzB,MAAAA,SAAS,CAACwB,OAAV,CAAkBK,MAAlB,GAA2BF,WAA3B,CAbA,CAeA;;AACA,YAAMG,GAAG,GAAG,MAAMT,GAAG,CAACU,MAAJ,CAAWL,KAAX,CAAlB,CAhBA,CAmBA;;AACA,YAAMM,GAAG,GAAGhC,SAAS,CAACwB,OAAV,CAAkBS,UAAlB,CAA6B,IAA7B,CAAZ;AACAC,MAAAA,QAAQ,CAACJ,GAAD,EAAME,GAAN,CAAR;AACD;AACF,GA7BD;;AA+BA,WAAS2B,mBAAT,GAA8B;AAC5B,QAAGtD,WAAW,KAAK,KAAnB,EAAyB;AACvBC,MAAAA,cAAc,CAAC,IAAD,CAAd;AAEAE,MAAAA,aAAa,CAAC,MAAD,CAAb;AACAgD,MAAAA,OAAO;AACR,KALD,MAMI;AACFlD,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAI,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,MAAAA,aAAa,CAAC,OAAD,CAAb;AACD;AACF;;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,wDAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,mCAAlB;AAAsD,MAAA,KAAK,EAAE;AAACoB,QAAAA,KAAK,EAAC;AAAP,OAA7D;AAA2E,MAAA,OAAO,EAAE+B,mBAApF;AAAA,6BAAyG;AAAA,kBAASpD;AAAT;AAAA;AAAA;AAAA;AAAA;AAAzG;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGF,WAAW,iBACV;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,GAAG,EAAEN,SADP;AAEE,UAAA,KAAK,EAAE,IAFT;AAGE,UAAA,gBAAgB,EAAC,YAHnB;AAIE,UAAA,KAAK,EAAE;AACL6D,YAAAA,UAAU,EAAE,MADP;AAELC,YAAAA,WAAW,EAAE,MAFR;AAGLC,YAAAA,IAAI,EAAE,CAHD;AAILC,YAAAA,KAAK,EAAE,CAJF;AAKLC,YAAAA,SAAS,EAAE,QALN;AAMLpC,YAAAA,KAAK,EAAE,GANF;AAOLC,YAAAA,MAAM,EAAE;AAPH;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADJ,eAkBI;AACE,QAAA,GAAG,EAAE7B,SADP;AAEE,QAAA,KAAK,EAAE;AACLiE,UAAAA,QAAQ,EAAE,UADL;AAELL,UAAAA,UAAU,EAAE,MAFP;AAGLC,UAAAA,WAAW,EAAE,MAHR;AAILC,UAAAA,IAAI,EAAE,CAJD;AAKLC,UAAAA,KAAK,EAAE,CALF;AAMLC,UAAAA,SAAS,EAAE,QANN;AAOLpC,UAAAA,KAAK,EAAE,GAPF;AAQLC,UAAAA,MAAM,EAAE;AARH;AAFT;AAAA;AAAA;AAAA;AAAA,cAlBJ,eA+BI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAAA,iCAA8B;AAAK,YAAA,GAAG,EAAEqC,MAAV;AAAkB,YAAA,OAAO,EAAE/B,OAA3B;AAAoC,YAAA,KAAK,EAAE;AAACP,cAAAA,KAAK,EAAE,EAAR;AAAYC,cAAAA,MAAM,EAAE;AAApB;AAA3C;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGpB,MAAM,iBACL;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAAA,iCAA8B;AAAK,YAAA,GAAG,EAAE0D,cAAV;AAA0B,YAAA,OAAO,EAAErD,aAAnC;AAAkD,YAAA,KAAK,EAAE;AAACc,cAAAA,KAAK,EAAE,EAAR;AAAYC,cAAAA,MAAM,EAAE;AAApB;AAAzD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BJ,EAsCKpB,MAAM,iBAEL;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCAEE;AACE,UAAA,GAAG,EAAEP,QADP;AAEE,UAAA,GAAG,EAAEO,MAFP;AAGE,UAAA,KAAK,EAAE;AACLmB,YAAAA,KAAK,EAAE,GADF;AAELC,YAAAA,MAAM,EAAE;AAFH;AAHT;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE;AACE,UAAA,GAAG,EAAE5B,UADP;AAEE,UAAA,KAAK,EAAE;AACLgE,YAAAA,QAAQ,EAAE,UADL;AAELL,YAAAA,UAAU,EAAE,MAFP;AAGLC,YAAAA,WAAW,EAAE,MAHR;AAILC,YAAAA,IAAI,EAAE,CAJD;AAKLC,YAAAA,KAAK,EAAE,CALF;AAMLC,YAAAA,SAAS,EAAE,QANN;AAOLpC,YAAAA,KAAK,EAAE,GAPF;AAQLC,YAAAA,MAAM,EAAE;AARH;AAFT;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxCN;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+ED;;GA/MQ/B,a;;KAAAA,a;AAiNT,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport Webcam from \"react-webcam\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport { useRef, useState, useCallback } from \"react\";\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport camera from \"../photo-camera.svg\";\nimport download_image from \"../download.svg\";\nimport download from 'downloadjs';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\n\nfunction RealDetection(){\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const canvasRef2 = useRef(null);\n  const imageRef = useRef(null);\n  const [reloadState, setReload] = useState(0);\n  const [stateWebcam, setStateWebcam] = useState(false);\n  const [nameButton, setNameButton] = useState('Start');\n  const [imgSrc, setImgSrc] = React.useState(null);\n\n\n  function reload(){\n    if(reloadState===0){\n      setReload(1);\n      console.log(\"reload\");\n    }\n    else{\n      setReload(0);\n      console.log(\"reload\");\n    }\n  }\n\n  function downloadImage(){\n    domtoimage.toBlob(document.getElementsByClassName(\"imageDownload\")[0])\n    .then(function (blob) {\n        window.saveAs(blob, 'my-image.png');\n    });\n  }\n\n  const detect_img = async () => {\n    const net = await cocossd.load();\n    const img = imageRef.current;\n\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n    canvasRef2.current.width = videoWidth;\n    canvasRef2.current.height = videoHeight;\n\n    const obj = await net.detect(img);\n    console.log(obj);\n    const ctx = canvasRef2.current.getContext(\"2d\");\n    drawRect(obj,ctx);\n  };\n\n\n  function capture(){\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n    detect_img();\n  }\n\n  function drawRect (detections, ctx){\n    // Loop through each prediction\n    detections.forEach(prediction => {\n\n      // Extract boxes and classes\n      const [x, y, width, height] = prediction['bbox'];\n      const text = prediction['class'] + \" \" + prediction['score'];\n\n      // Set styling\n      const color = Math.floor(Math.random()*16777215).toString(16);\n      ctx.strokeStyle = '#' + color\n      ctx.font = '18px Arial';\n\n      // Draw rectangles and text\n      ctx.beginPath();\n      ctx.fillStyle = '#' + color\n      ctx.fillText(text, x, y);\n      ctx.rect(x, y, width, height);\n      ctx.stroke();\n    });\n  }\n\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const obj = await net.detect(video);\n\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx);\n    }\n  };\n\n  function change_state_webcam(){\n    if(stateWebcam === false){\n      setStateWebcam(true);\n\n      setNameButton(\"Stop\");\n      runCoco();\n    }\n    else{\n      setStateWebcam(false);\n      setImgSrc(null);\n      setNameButton(\"Start\");\n    }\n  }\n\n\n  return(\n    <div className=\"Componente1 d-flex flex-column align-items-center mt-5\">\n      <h1 className=\"yellow\">REAL DETECTION</h1>\n      <h6 className=\"\">USE YOUR CAMERA TO REVEAL OBJECTS</h6>\n      <button className=\"btn btn-outline-primary mt-4 mb-3\" style={{width:150,}} onClick={change_state_webcam}><strong>{nameButton}</strong></button>\n      {stateWebcam && (\n        <div className=\"d-flex flex-column align-items-center\">\n            <div className=\"imageContainer\">\n              <Webcam\n                ref={webcamRef}\n                muted={true}\n                screenshotFormat=\"image/jpeg\"\n                style={{\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  left: 0,\n                  right: 0,\n                  textAlign: \"center\",\n                  width: 640,\n                  height: 480,\n                }}\n              />\n            </div>\n\n            <canvas\n              ref={canvasRef}\n              style={{\n                position: \"absolute\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                left: 0,\n                right: 0,\n                textAlign: \"center\",\n                width: 640,\n                height: 480,\n              }}\n            />\n            <div className=\"container-button\">\n              <button className=\"mt-3 mb-3\"><img src={camera} onClick={capture} style={{width: 35, height: 35}} /></button>\n              {imgSrc && (\n                <button className=\"mt-3 mb-3\"><img src={download_image} onClick={downloadImage} style={{width: 35, height: 35}} /></button>\n              )}\n            </div>\n\n            {imgSrc && (\n\n              <div className=\"imageDownload\">\n\n                <img\n                  ref={imageRef}\n                  src={imgSrc}\n                  style={{\n                    width: 640,\n                    height: 480\n                  }}\n                />\n\n                <canvas\n                  ref={canvasRef2}\n                  style={{\n                    position: \"absolute\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    left: 0,\n                    right: 0,\n                    textAlign: \"center\",\n                    width: 640,\n                    height: 480,\n                  }}\n                />\n\n              </div>\n\n            )}\n        </div>\n      )}\n\n    </div>\n  );\n}\n\nexport default RealDetection;\n"]},"metadata":{},"sourceType":"module"}