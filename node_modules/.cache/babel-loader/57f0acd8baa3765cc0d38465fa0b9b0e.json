{"ast":null,"code":"var _jsxFileName = \"/home/mattia/Scrivania/detection-app/src/components/RealDetection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawRect } from \"./utilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const canvasRef2 = useRef(null);\n  const [imgSrc, setImgSrc] = useState(null);\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n  }, [webcamRef, setImgSrc]); // Main function\n\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const obj = await net.detect(video); // Draw mesh\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runCoco();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        muted: true,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 8,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: capture,\n      children: \"Capture Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), imgSrc && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgSrc,\n        muted: true,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef2,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 8,\n          width: 640,\n          height: 480\n        },\n        onClick: e => {\n          alert(\"canvas2\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lTBuUjd4Se21Rcwm8YvEaMigGPU=\");\n\n_c = App;\nexport default RealDetection;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mattia/Scrivania/detection-app/src/components/RealDetection.js"],"names":["React","useRef","useState","useEffect","useCallback","tf","cocossd","Webcam","drawRect","App","webcamRef","canvasRef","canvasRef2","imgSrc","setImgSrc","capture","imageSrc","current","getScreenshot","runCoco","net","load","console","log","setInterval","detect","video","readyState","videoWidth","videoHeight","width","height","obj","ctx","getContext","position","marginLeft","marginRight","left","right","textAlign","zindex","e","alert","RealDetection"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawRect } from \"./utilities\";\n\nfunction App() {\n\n  const webcamRef = useRef(null);\n\n  const canvasRef = useRef(null);\n\n  const canvasRef2 = useRef(null);\n\n  const [imgSrc, setImgSrc] = useState(null);\n\n  const capture = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n\n  }, [webcamRef, setImgSrc]);\n\n\n  // Main function\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Handpose model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n\n\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const obj = await net.detect(video);\n\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx);\n    }\n  };\n\n  useEffect(()=>{runCoco()},[]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          muted={true}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n      <button onClick={capture}>Capture Photo</button>\n      {imgSrc && (\n        <div>\n          <img\n            src={imgSrc}\n            muted={true}\n            style={{\n              position: \"absolute\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              left: 0,\n              right: 0,\n              textAlign: \"center\",\n              zindex: 9,\n              width: 640,\n              height: 480,\n            }}\n          />\n          <canvas\n            ref={canvasRef2}\n            style={{\n              position: \"absolute\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              left: 0,\n              right: 0,\n              textAlign: \"center\",\n              zindex: 8,\n              width: 640,\n              height: 480,\n            }}\n            onClick={(e)=>{alert(\"canvas2\")}}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\nexport default RealDetection;\n"]},"metadata":{},"sourceType":"module"}